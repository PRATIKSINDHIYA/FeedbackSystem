{
  "version": 3,
  "sources": ["../../../../Pictures/new/project/netlify/functions/delete-feedback.js"],
  "sourceRoot": "C:/Users/Prateek/AppData/Local/Temp/tmp-3344-IMMLE50h3hCR",
  "sourcesContent": ["import fs from 'fs';\r\nimport path from 'path';\r\nimport os from 'os';\r\n\r\nconst dataDir = path.join(os.homedir(), 'feedback-data');\r\nconst feedbackFile = path.join(dataDir, 'feedbacks.json');\r\n\r\nexport const handler = async (event, context) => {\r\n  // Only allow DELETE requests\r\n  if (event.httpMethod !== 'DELETE') {\r\n    return {\r\n      statusCode: 405,\r\n      body: JSON.stringify({ error: 'Method not allowed' })\r\n    };\r\n  }\r\n\r\n  try {\r\n    // Get feedback ID from path\r\n    const id = event.path.split('/').pop();\r\n    if (!id) {\r\n      return {\r\n        statusCode: 400,\r\n        body: JSON.stringify({ error: 'Feedback ID is required' })\r\n      };\r\n    }\r\n\r\n    // Check if data directory exists\r\n    if (!fs.existsSync(dataDir)) {\r\n      return {\r\n        statusCode: 404,\r\n        body: JSON.stringify({ error: 'No feedback data found' })\r\n      };\r\n    }\r\n\r\n    // Read existing feedbacks\r\n    let feedbacks = [];\r\n    if (fs.existsSync(feedbackFile)) {\r\n      const data = fs.readFileSync(feedbackFile, 'utf8');\r\n      feedbacks = JSON.parse(data);\r\n    }\r\n\r\n    // Find and remove the feedback\r\n    const initialLength = feedbacks.length;\r\n    feedbacks = feedbacks.filter(feedback => feedback.id !== id);\r\n\r\n    // If no feedback was removed, return 404\r\n    if (feedbacks.length === initialLength) {\r\n      return {\r\n        statusCode: 404,\r\n        body: JSON.stringify({ error: 'Feedback not found' })\r\n      };\r\n    }\r\n\r\n    // Write updated feedbacks to file\r\n    fs.writeFileSync(feedbackFile, JSON.stringify(feedbacks, null, 2));\r\n\r\n    return {\r\n      statusCode: 200,\r\n      body: JSON.stringify({ message: 'Feedback deleted successfully' })\r\n    };\r\n  } catch (error) {\r\n    console.error('Error deleting feedback:', error);\r\n    return {\r\n      statusCode: 500,\r\n      body: JSON.stringify({ error: 'Failed to delete feedback' })\r\n    };\r\n  }\r\n}; "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAe;AACf,kBAAiB;AACjB,gBAAe;AAEf,IAAM,UAAU,YAAAA,QAAK,KAAK,UAAAC,QAAG,QAAQ,GAAG,eAAe;AACvD,IAAM,eAAe,YAAAD,QAAK,KAAK,SAAS,gBAAgB;AAEjD,IAAM,UAAU,OAAO,OAAO,YAAY;AAE/C,MAAI,MAAM,eAAe,UAAU;AACjC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC;AAAA,IACtD;AAAA,EACF;AAEA,MAAI;AAEF,UAAM,KAAK,MAAM,KAAK,MAAM,GAAG,EAAE,IAAI;AACrC,QAAI,CAAC,IAAI;AACP,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,OAAO,0BAA0B,CAAC;AAAA,MAC3D;AAAA,IACF;AAGA,QAAI,CAAC,UAAAE,QAAG,WAAW,OAAO,GAAG;AAC3B,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,OAAO,yBAAyB,CAAC;AAAA,MAC1D;AAAA,IACF;AAGA,QAAI,YAAY,CAAC;AACjB,QAAI,UAAAA,QAAG,WAAW,YAAY,GAAG;AAC/B,YAAM,OAAO,UAAAA,QAAG,aAAa,cAAc,MAAM;AACjD,kBAAY,KAAK,MAAM,IAAI;AAAA,IAC7B;AAGA,UAAM,gBAAgB,UAAU;AAChC,gBAAY,UAAU,OAAO,cAAY,SAAS,OAAO,EAAE;AAG3D,QAAI,UAAU,WAAW,eAAe;AACtC,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC;AAAA,MACtD;AAAA,IACF;AAGA,cAAAA,QAAG,cAAc,cAAc,KAAK,UAAU,WAAW,MAAM,CAAC,CAAC;AAEjE,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,SAAS,gCAAgC,CAAC;AAAA,IACnE;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,4BAA4B,KAAK;AAC/C,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,4BAA4B,CAAC;AAAA,IAC7D;AAAA,EACF;AACF;",
  "names": ["path", "os", "fs"]
}
