{
  "version": 3,
  "sources": ["../../../../Pictures/new/project/netlify/functions/get-feedbacks.ts"],
  "sourceRoot": "C:/Users/Prateek/AppData/Local/Temp/tmp-27296-GjeO0efUlwsi",
  "sourcesContent": ["import { Handler } from '@netlify/functions';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport os from 'os';\r\n\r\ninterface Feedback {\r\n  id: string;\r\n  full_name: string;\r\n  email: string;\r\n  message: string;\r\n  rating: number;\r\n  created_at: string;\r\n}\r\n\r\nconst handler: Handler = async (event) => {\r\n  // Set CORS headers\r\n  const headers = {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Headers': 'Content-Type',\r\n    'Access-Control-Allow-Methods': 'GET, OPTIONS',\r\n    'Content-Type': 'application/json',\r\n  };\r\n\r\n  // Handle OPTIONS request for CORS\r\n  if (event.httpMethod === 'OPTIONS') {\r\n    return {\r\n      statusCode: 200,\r\n      headers,\r\n      body: '',\r\n    };\r\n  }\r\n\r\n  try {\r\n    const dataDir = path.join(os.homedir(), 'feedback-data');\r\n    const feedbackFile = path.join(dataDir, 'feedbacks.json');\r\n\r\n    // Create data directory if it doesn't exist\r\n    if (!fs.existsSync(dataDir)) {\r\n      fs.mkdirSync(dataDir, { recursive: true });\r\n      console.log('Created feedback data directory:', dataDir);\r\n    }\r\n\r\n    // Read feedbacks from file\r\n    let feedbacks: Feedback[] = [];\r\n    if (fs.existsSync(feedbackFile)) {\r\n      const data = fs.readFileSync(feedbackFile, 'utf8');\r\n      feedbacks = JSON.parse(data);\r\n      console.log(`Successfully loaded ${feedbacks.length} feedbacks`);\r\n    } else {\r\n      console.log('No feedback file found, returning empty array');\r\n    }\r\n\r\n    return {\r\n      statusCode: 200,\r\n      headers,\r\n      body: JSON.stringify(feedbacks),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error in get-feedbacks function:', error);\r\n    return {\r\n      statusCode: 500,\r\n      headers,\r\n      body: JSON.stringify({ \r\n        error: 'Failed to fetch feedbacks',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      }),\r\n    };\r\n  }\r\n};\r\n\r\nexport { handler }; "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAe;AACf,kBAAiB;AACjB,gBAAe;AAWf,IAAM,UAAmB,OAAO,UAAU;AAExC,QAAM,UAAU;AAAA,IACd,+BAA+B;AAAA,IAC/B,gCAAgC;AAAA,IAChC,gCAAgC;AAAA,IAChC,gBAAgB;AAAA,EAClB;AAGA,MAAI,MAAM,eAAe,WAAW;AAClC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ;AAAA,MACA,MAAM;AAAA,IACR;AAAA,EACF;AAEA,MAAI;AACF,UAAM,UAAU,YAAAA,QAAK,KAAK,UAAAC,QAAG,QAAQ,GAAG,eAAe;AACvD,UAAM,eAAe,YAAAD,QAAK,KAAK,SAAS,gBAAgB;AAGxD,QAAI,CAAC,UAAAE,QAAG,WAAW,OAAO,GAAG;AAC3B,gBAAAA,QAAG,UAAU,SAAS,EAAE,WAAW,KAAK,CAAC;AACzC,cAAQ,IAAI,oCAAoC,OAAO;AAAA,IACzD;AAGA,QAAI,YAAwB,CAAC;AAC7B,QAAI,UAAAA,QAAG,WAAW,YAAY,GAAG;AAC/B,YAAM,OAAO,UAAAA,QAAG,aAAa,cAAc,MAAM;AACjD,kBAAY,KAAK,MAAM,IAAI;AAC3B,cAAQ,IAAI,uBAAuB,UAAU,MAAM,YAAY;AAAA,IACjE,OAAO;AACL,cAAQ,IAAI,+CAA+C;AAAA,IAC7D;AAEA,WAAO;AAAA,MACL,YAAY;AAAA,MACZ;AAAA,MACA,MAAM,KAAK,UAAU,SAAS;AAAA,IAChC;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,oCAAoC,KAAK;AACvD,WAAO;AAAA,MACL,YAAY;AAAA,MACZ;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,OAAO;AAAA,QACP,SAAS,iBAAiB,QAAQ,MAAM,UAAU;AAAA,MACpD,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": ["path", "os", "fs"]
}
